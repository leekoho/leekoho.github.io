<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leekoho&#39;blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leekoho.com/"/>
  <updated>2017-02-27T17:19:24.591Z</updated>
  <id>http://leekoho.com/</id>
  
  <author>
    <name>leekoho</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS内置的计数器</title>
    <link href="http://leekoho.com/2017/02/27/CSS%E5%86%85%E7%BD%AE%E7%9A%84%E8%AE%A1%E6%95%B0%E5%99%A8/"/>
    <id>http://leekoho.com/2017/02/27/CSS内置的计数器/</id>
    <published>2017-02-27T12:55:33.000Z</published>
    <updated>2017-02-27T17:19:24.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写作背景"><a href="#写作背景" class="headerlink" title="写作背景"></a>写作背景</h2><p>今天看某公司主页时，发现他们<code>li</code>的编号貌似是是通过下图红框中的CSS代码来实现的。然后在 <a href="http://www.w3school.com.cn/cssref/pr_gen_counter-increment.asp" target="_blank" rel="external">W3Scholl</a> 上查了一下关于<code>counter-increment</code>属性的的资料，才知道原来CSS有内置的计数器功能……这里记录一下计数器的使用方法，以防忘记。</p>
<p><img src="/upload/20170227212223.png" alt=""></p>
<a id="more"></a>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="初始化计数器"><a href="#初始化计数器" class="headerlink" title="初始化计数器"></a>初始化计数器</h3><p>为了好理解，我们使用<code>&lt;ol&gt;</code> 和 <code>&lt;li&gt;</code> 元素来做演示。首先，给这个计数器起一个名字，然后使用<code>counter-reset</code>在你需要开始计数的地方来重置计数器：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span> &#123;</div><div class="line">   <span class="attribute">counter-reset</span>: num;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>counter-reset: num;</code>初始值默认为0！！！在<code>counter-reset</code>声明之后传递一个整数，可以更改计数器的初始值：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span> &#123;</div><div class="line">    <span class="attribute">counter-reset</span>: num <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="计数器自增-自减"><a href="#计数器自增-自减" class="headerlink" title="计数器自增/自减"></a>计数器自增/自减</h3><p>通过<code>counter-increment</code>指定计数器何时自增，比如碰到<code>&lt;li&gt;</code>就自增，所以我们用CSS选择器选择<code>&lt;li&gt;</code>：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span> &gt; <span class="selector-tag">li</span> &#123;    <span class="comment">/* 使用 &gt; 可以过滤掉嵌套的&lt;li&gt;元素 */</span></div><div class="line">    <span class="attribute">counter-increment</span>: num;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这样，每遇到一个符合选择器条件的元素，<code>counter-increment</code>就会被调用一次，计数器值默认+1。<code>counter-increment</code>也可以传递一个偏移量（正负数均可），改变增量值的步数：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span> &gt; <span class="selector-tag">li</span> &#123;</div><div class="line">    <span class="attribute">counter-increment</span>: num -<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>注意：如果使用了 <code>display: none</code>，则无法增加计数。使用 <code>visibility: hidden</code>，则可增加计数。</strong></p>
<h3 id="使用计数器的值"><a href="#使用计数器的值" class="headerlink" title="使用计数器的值"></a>使用计数器的值</h3><p>用CSS函数<code>counter()</code>来输出计数器里的值，语法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">counter(计数器名称，可选的风格)   //默认风格为decimal，阿拉伯数字形式</div></pre></td></tr></table></figure>
<p>可选的风格有：<br><code>decimal</code>， <code>decimal-leading-zero</code>，<code>lower-roman</code>, <code>upper-roman</code>, <code>lower-greek</code>,  <code>lower-latin</code>, <code>upper-latin</code>, <code>armenian</code>, <code>georgian</code>, <code>lower-alpha</code>, <code>upper-alpha</code></p>
<h2 id="一些高级用法"><a href="#一些高级用法" class="headerlink" title="一些高级用法"></a>一些高级用法</h2><h3 id="自定义计数器内容"><a href="#自定义计数器内容" class="headerlink" title="自定义计数器内容"></a>自定义计数器内容</h3><p><code>content</code>属性中，CSS函数<code>counter()</code>可以和其他字符串连接来自定义计数器的内容，例如：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:before</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">'第'</span> <span class="built_in">counter</span>(num) <span class="string">'部分'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="中文计数"><a href="#中文计数" class="headerlink" title="中文计数"></a>中文计数</h3><p>部分浏览器可能不支持：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:before</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="built_in">counter</span>(num, cjk-ideographic);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写作背景&quot;&gt;&lt;a href=&quot;#写作背景&quot; class=&quot;headerlink&quot; title=&quot;写作背景&quot;&gt;&lt;/a&gt;写作背景&lt;/h2&gt;&lt;p&gt;今天看某公司主页时，发现他们&lt;code&gt;li&lt;/code&gt;的编号貌似是是通过下图红框中的CSS代码来实现的。然后在 &lt;a href=&quot;http://www.w3school.com.cn/cssref/pr_gen_counter-increment.asp&quot;&gt;W3Scholl&lt;/a&gt; 上查了一下关于&lt;code&gt;counter-increment&lt;/code&gt;属性的的资料，才知道原来CSS有内置的计数器功能……这里记录一下计数器的使用方法，以防忘记。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/20170227212223.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于CSS实现水平居中的一些总结</title>
    <link href="http://leekoho.com/2017/02/07/%E5%85%B3%E4%BA%8ECSS%E5%AE%9E%E7%8E%B0%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/"/>
    <id>http://leekoho.com/2017/02/07/关于CSS实现水平居中的一些总结/</id>
    <published>2017-02-07T10:25:00.000Z</published>
    <updated>2017-02-27T16:24:05.087Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h2><blockquote>
<p>书写是为了更好的思考  </p>
</blockquote>
<p>这是第一次有<strong>自己</strong>写博客的想法，为此花了一晚上的时间在GitHub上部署了Hexo，主要记录和总结自己学习的心得，同时这也是我写的一篇技术类的博客，先从简单的写起，希望对初学者有一定的帮助作用。</p>
<p>实现效果如下图</p>
<p><img src="/upload/20170211233904.png" alt="Alt text"></p>
<a id="more"></a>
<p>HTML元素分为行内元素和块级元素，而行内元素只要给父元素设置<code>text-align: center;</code>就可以实现居中，块级元素我们可以分定宽块级元素和不定宽块级元素来讨论，并且我们固定一下DOM结构：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"containner"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>A<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>B<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="定宽块级元素"><a href="#定宽块级元素" class="headerlink" title="定宽块级元素"></a>定宽块级元素</h2><p>我们都知道 <code>margin: 0 auto</code> 左右<code>margin</code>值自动可以实现水平居中，但是如果设置了 <code>float:left/right</code>、<code>positon: absolute/fixed;</code> 等属性时，元素脱离文档流，<code>margin: 0 auto</code>居中就不起作用了，下面这个方法就是针对这种情况的：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> &#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> &gt; <span class="selector-tag">ul</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;            <span class="comment">/* 先向右边移动.containner宽度的一半 */</span></div><div class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</div><div class="line">    <span class="attribute">margin-left</span>: -<span class="number">225px</span>;  <span class="comment">/* 再向左边移动ul宽度的一半 */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.containner</span> <span class="selector-tag">li</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>  <span class="number">25px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</div><div class="line">    <span class="attribute">list-style</span>: none;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="不定宽块级元素"><a href="#不定宽块级元素" class="headerlink" title="不定宽块级元素"></a>不定宽块级元素</h2><h3 id="方法一：inline-block"><a href="#方法一：inline-block" class="headerlink" title="方法一：inline-block"></a>方法一：inline-block</h3><p>上面我们说到了行内元素只要给父元素设置<code>text-align: center;</code>既可以设置水平居中，那么将不定宽的块级元素设置为<code>display: inline-block;</code>，然后再为父元素设置<code>text-align: center;</code>也是可以实现水平居中。但是这种方法又会产生了一个新的问题，inline-block元素之间会因为回车符带来空白间距（这个间距并不是所有的浏览器都存在），这里可以给父元素设置字体大小为0，然后在<code>inline-block</code>元素上重置字体需要的大小来解决这个问题：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> &#123;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> <span class="selector-tag">li</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</div><div class="line"></div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>  <span class="number">25px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">list-style</span>: none;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="方法二：float-position-relative"><a href="#方法二：float-position-relative" class="headerlink" title="方法二：float + position: relative;"></a>方法二：float + position: relative;</h3><p>其实这种方法实现原理跟定宽块级元素的负边距原理类似，如果一个元素设置<code>position: relative; left: 50%;</code>，那么这个50%是自身宽度的50%，所以我们的思路一样，先把<code>.containner</code>想右移动自身的50%，再把<code>ul</code>向左移动自身的50%：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> <span class="selector-tag">ul</span> &#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">left</span>: -<span class="number">50%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.containner</span> <span class="selector-tag">li</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>  <span class="number">25px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">list-style</span>: none;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="方法三：Flex布局"><a href="#方法三：Flex布局" class="headerlink" title="方法三：Flex布局"></a>方法三：Flex布局</h3><p>关于Flex布局可以查看这篇教程<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool" target="_blank" rel="external">Flex 布局教程：语法篇</a>，采用Flex布局的元素，它的所有子元素自动成为容器成员，称为Flex项目（flex item），我们只要容器设置相应属性就可以实现居中效果了：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.containner</span> <span class="selector-tag">ul</span> &#123;</div><div class="line">    <span class="attribute">display</span>: flex;</div><div class="line">    <span class="attribute">display</span>: -webkit-flex;</div><div class="line">    <span class="attribute">justify-content</span>: center; <span class="comment">/*没错就是这么简单。。。*/</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-class">.containner</span> <span class="selector-tag">li</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>  <span class="number">25px</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">list-style</span>: none;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#222</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面的话&quot;&gt;&lt;a href=&quot;#写在前面的话&quot; class=&quot;headerlink&quot; title=&quot;写在前面的话&quot;&gt;&lt;/a&gt;写在前面的话&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;书写是为了更好的思考  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是第一次有&lt;strong&gt;自己&lt;/strong&gt;写博客的想法，为此花了一晚上的时间在GitHub上部署了Hexo，主要记录和总结自己学习的心得，同时这也是我写的一篇技术类的博客，先从简单的写起，希望对初学者有一定的帮助作用。&lt;/p&gt;
&lt;p&gt;实现效果如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/upload/20170211233904.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端开发" scheme="http://leekoho.com/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="前端开发" scheme="http://leekoho.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="CSS" scheme="http://leekoho.com/tags/CSS/"/>
    
  </entry>
  
</feed>
